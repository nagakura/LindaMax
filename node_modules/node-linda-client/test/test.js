// Generated by CoffeeScript 1.6.3
(function() {
  var LindaClient, TupleSpace, assert, linda, ts;

  assert = require("assert");

  LindaClient = require("../client").LindaClient;

  TupleSpace = require("../client").TupleSpace;

  linda = new LindaClient("localhost:10010");

  ts = new TupleSpace("takumibaba", linda);

  before(function(done) {
    linda.io.on("connect", function() {
      return done();
    });
    return linda.connect();
  });

  describe("tuplespace", function() {
    it("write and read request", function(done) {
      var t;
      t = [0, 1, 2];
      ts.read(t, function(tuple, info) {
        assert.deepEqual(tuple, t);
        return done();
      });
      return ts.write(t);
    });
    it("write and watch request", function(done) {
      var t;
      t = [3, 4, 5];
      ts.watch(t, function(tuple, info) {
        assert.deepEqual(tuple, t);
        return done();
      });
      return ts.write(t);
    });
    return it("write and take", function(done) {
      var _this = this;
      ts.write(["take", 1, 2, 3]);
      ts.write(["take", 4, 5, 6]);
      ts.write(["take", 7, 8, 9]);
      return ts.take(["take"], function(tuple, info) {
        assert.deepEqual(tuple, ["take", 7, 8, 9]);
        return ts.take(["take"], function(tuple, info) {
          assert.deepEqual(tuple, ["take", 4, 5, 6]);
          return ts.take(["take"], function(tuple, info) {
            assert.deepEqual(tuple, ["take", 1, 2, 3]);
            return done();
          });
        });
      });
    });
  });

}).call(this);
